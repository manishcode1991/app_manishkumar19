apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-cluster-manishkumar19
---

apiVersion: v1
kind : ConfigMap
metadata:
  name: first-configmap
  namespace: kubernetes-cluster-manishkumar19
  labels:
     app: myapp
data:
  node_env: PRODUCTION
  port: '7100'
---
# We will create secret with help of command on production ENV
apiVersion: v1
kind : Secret
metadata:
  name: first-secret
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJyZWdpc3RyeS5naXRsYWIuY29tIjogewoJCQkiYXV0aCI6ICJiV0Z1YVhOb0xtdDFiV0Z5TVRsQWJtRm5ZWEp5Ynk1amIyMDZTMlZsY21GME16SXhJMEFoIgoJCX0KCX0KfQ==
type: kubernetes.io/dockerconfigjson

---

apiVersion: apps/v1
kind : Deployment
metadata:
  name: first-deployment
  namespace: kubernetes-cluster-manishkumar19
  labels:
     app: myapp
  annotations:
    kubernetes.io/change-cause: "My custom message 2"
spec:
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: first-replicaset
      labels:
        app: myapp
    spec:
      containers:
        - image: manishsurbo/i-manishkumar19-develop:19
          name: first-app
          ports:
            - containerPort: 7100
#          envFrom:
#            - configMapRef:
#              name: app-settings
  replicas: 4
  selector:
    matchLabels:
      app: myapp

---
apiVersion: v1
kind: Service
metadata:
  name: first-node-port-service
  namespace: kubernetes-cluster-manishkumar19
spec:
  type: LoadBalancer
  ports:
    - targetPort: 7100
      port: 7100  # service port
      nodePort: 30010
  selector:
    app: myapp




